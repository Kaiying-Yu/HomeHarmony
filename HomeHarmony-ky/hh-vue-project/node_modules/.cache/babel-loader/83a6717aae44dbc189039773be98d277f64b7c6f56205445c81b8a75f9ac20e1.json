{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AuthView',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await axios.post('http://localhost:8080/auth/login', {\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n        if (response.data && response.data.id) {\n          localStorage.setItem('userId', response.data.id);\n          localStorage.setItem('username', response.data.username);\n          if (response.data.spaceId) {\n            localStorage.setItem('spaceId', response.data.spaceId);\n          }\n          this.$router.push('/space');\n          this.$message.success('Login successful');\n        } else {\n          this.$message.error('Invalid response from server');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        this.$message.error(error.response?.data || 'Login failed');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginForm","username","password","methods","handleLogin","response","post","id","localStorage","setItem","spaceId","$router","push","$message","success","error","console"],"sources":["src/views/auth/AuthView.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-box\">\r\n      <h2>Login</h2>\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            v-model=\"loginForm.username\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n            required\r\n          >\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n          >\r\n        </div>\r\n        <button type=\"submit\" class=\"login-button\">Login</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AuthView',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/auth/login', {\r\n          username: this.loginForm.username,\r\n          password: this.loginForm.password\r\n        });\r\n        \r\n        if (response.data && response.data.id) {\r\n          localStorage.setItem('userId', response.data.id);\r\n          localStorage.setItem('username', response.data.username);\r\n          if (response.data.spaceId) {\r\n            localStorage.setItem('spaceId', response.data.spaceId);\r\n          }\r\n          this.$router.push('/space');\r\n          this.$message.success('Login successful');\r\n        } else {\r\n          this.$message.error('Invalid response from server');\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        this.$message.error(error.response?.data || 'Login failed');\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.auth-box {\r\n  background: white;\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  color: #333;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #666;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #1d80d1;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #588fe2;\r\n}\r\n</style>"],"mappings":";AAgCA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACA;QACA,MAAAC,QAAA,SAAAR,KAAA,CAAAS,IAAA;UACAL,QAAA,OAAAD,SAAA,CAAAC,QAAA;UACAC,QAAA,OAAAF,SAAA,CAAAE;QACA;QAEA,IAAAG,QAAA,CAAAN,IAAA,IAAAM,QAAA,CAAAN,IAAA,CAAAQ,EAAA;UACAC,YAAA,CAAAC,OAAA,WAAAJ,QAAA,CAAAN,IAAA,CAAAQ,EAAA;UACAC,YAAA,CAAAC,OAAA,aAAAJ,QAAA,CAAAN,IAAA,CAAAE,QAAA;UACA,IAAAI,QAAA,CAAAN,IAAA,CAAAW,OAAA;YACAF,YAAA,CAAAC,OAAA,YAAAJ,QAAA,CAAAN,IAAA,CAAAW,OAAA;UACA;UACA,KAAAC,OAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;QACA;UACA,KAAAD,QAAA,CAAAE,KAAA;QACA;MACA,SAAAA,KAAA;QACAC,OAAA,CAAAD,KAAA,iBAAAA,KAAA;QACA,KAAAF,QAAA,CAAAE,KAAA,CAAAA,KAAA,CAAAV,QAAA,EAAAN,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}