{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppLayout from '@/components/layout/AppLayout.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    AppLayout\n  },\n  data() {\n    return {\n      currentSpace: null,\n      dialogVisible: false,\n      newSpace: {\n        name: ''\n      },\n      joinDialogVisible: false,\n      joinSpace: {\n        spaceId: ''\n      }\n    };\n  },\n  methods: {\n    createSpace() {\n      this.dialogVisible = true;\n    },\n    submitNewSpace() {\n      const userId = localStorage.getItem('userId');\n      const username = localStorage.getItem('username');\n      const email = localStorage.getItem('email');\n      const spaceRequest = {\n        name: this.newSpace.name,\n        users: [{\n          id: parseInt(userId),\n          username: username,\n          email: email,\n          assignedChores: []\n        }]\n      };\n      axios.post('http://localhost:8080/space', spaceRequest).then(response => {\n        this.$message.success('Space created successfully!');\n        this.dialogVisible = false;\n        this.newSpace.name = '';\n        localStorage.setItem('spaceId', response.data.id);\n        this.fetchCurrentSpace();\n      }).catch(error => {\n        this.$message.error('Failed to create space: ' + error.response.data.message);\n        console.error('Error:', error);\n      });\n    },\n    fetchCurrentSpace() {\n      const spaceId = localStorage.getItem('spaceId');\n      if (!spaceId) {\n        return;\n      }\n      axios.get(`http://localhost:8080/space/${spaceId}`).then(response => {\n        this.currentSpace = response.data;\n      }).catch(error => {\n        console.error('Error fetching space:', error);\n        this.$message.error('Failed to fetch space details');\n        localStorage.removeItem('spaceId');\n      });\n    },\n    showJoinSpace() {\n      this.joinDialogVisible = true;\n    },\n    submitJoinSpace() {\n      const userId = localStorage.getItem('userId');\n      const spaceId = parseInt(this.joinSpace.spaceId);\n      if (isNaN(spaceId)) {\n        this.$message.error('Please enter a valid Space ID');\n        return;\n      }\n      axios.post(`http://localhost:8080/space/${spaceId}/users/${userId}`).then(() => {\n        this.$message.success('Successfully joined space!');\n        this.joinDialogVisible = false;\n        this.joinSpace.spaceId = '';\n        localStorage.setItem('spaceId', spaceId);\n        this.fetchCurrentSpace();\n      }).catch(error => {\n        const errorMessage = error.response?.data || 'Failed to join space';\n        this.$message.error(errorMessage);\n        console.error('Error:', error);\n      });\n    },\n    quitSpace() {\n      const userId = localStorage.getItem('userId');\n      const spaceId = this.currentSpace.id;\n      console.log('Attempting to quit space with:', {\n        userId,\n        spaceId,\n        currentSpace: this.currentSpace,\n        localStorage: {\n          userId: localStorage.getItem('userId'),\n          spaceId: localStorage.getItem('spaceId')\n        }\n      });\n      this.$confirm('Are you sure you want to quit this space?', 'Warning', {\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(`http://localhost:8080/space/${spaceId}/users/${userId}`).then(() => {\n          this.$message.success('Successfully quit the space');\n          localStorage.removeItem('spaceId');\n          this.currentSpace = null;\n        }).catch(error => {\n          console.error('Error quitting space:', {\n            error,\n            response: error.response?.data,\n            status: error.response?.status\n          });\n          const errorMessage = error.response?.data?.message || error.response?.data?.error || 'Failed to quit space';\n          this.$message.error(errorMessage);\n        });\n      });\n    }\n  },\n  mounted() {\n    this.fetchCurrentSpace();\n  },\n  created() {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      this.$message.error('User ID not found. Please login again.');\n      this.$router.push('/login');\n      return;\n    }\n    axios.get(`http://localhost:8080/user/${userId}`).then(response => {\n      if (response.data.status === 'success') {\n        const user = response.data.data;\n        if (user.spaceId) {\n          localStorage.setItem('spaceId', user.spaceId);\n          this.fetchCurrentSpace();\n        }\n      }\n    }).catch(error => {\n      console.error('Error fetching user:', error);\n      this.$message.error('Failed to fetch user information');\n    });\n  }\n};","map":{"version":3,"names":["AppLayout","axios","components","data","currentSpace","dialogVisible","newSpace","name","joinDialogVisible","joinSpace","spaceId","methods","createSpace","submitNewSpace","userId","localStorage","getItem","username","email","spaceRequest","users","id","parseInt","assignedChores","post","then","response","$message","success","setItem","fetchCurrentSpace","catch","error","message","console","get","removeItem","showJoinSpace","submitJoinSpace","isNaN","errorMessage","quitSpace","log","$confirm","confirmButtonText","cancelButtonText","type","delete","status","mounted","created","$router","push","user"],"sources":["src/views/homeharmony/SpaceView.vue"],"sourcesContent":["<template>\r\n    <app-layout>\r\n        <!-- Show create button if user has no space -->\r\n        <div v-if=\"!currentSpace\" class=\"empty-state\">\r\n            <el-empty description=\"You haven't joined any space yet\">\r\n                <el-button type=\"primary\" @click=\"createSpace\">Create New Space</el-button>\r\n                <el-button type=\"info\" @click=\"showJoinSpace\">Join Existing Space</el-button>\r\n            </el-empty>\r\n        </div>\r\n\r\n        <!-- Show space details if user has a space -->\r\n        <div v-else class=\"space-dashboard\">\r\n            <!-- Space Header Card -->\r\n            <el-card class=\"space-header\">\r\n                <div class=\"space-title\">\r\n                    <h2>\r\n                        {{ currentSpace ? currentSpace.name : 'No Space Joined' }}\r\n                        <span class=\"space-id\" v-if=\"currentSpace\">(ID: {{ currentSpace.id }})</span>\r\n                    </h2>\r\n                    <div v-if=\"currentSpace\">\r\n                        <el-button type=\"danger\" @click=\"quitSpace\">Quit Space</el-button>\r\n                    </div>\r\n                </div>\r\n            </el-card>\r\n\r\n            <!-- Cards Grid -->\r\n            <el-row :gutter=\"20\" class=\"card-grid\">\r\n                <!-- Team Members Card -->\r\n                <el-col :span=\"24\">\r\n                    <el-card class=\"box-card\">\r\n                        <template #header>\r\n                            <div class=\"card-header\">\r\n                                <span><i class=\"el-icon-user\"></i> Team Members</span>\r\n                            </div>\r\n                        </template>\r\n                        <div v-for=\"user in currentSpace.users\" \r\n                             :key=\"user.id\" \r\n                             class=\"user-item\">\r\n                            <div class=\"user-info\">\r\n                                <span>{{ user.username }}</span>\r\n                                <span class=\"user-points\">Points: {{ user.points }}</span>\r\n                            </div>\r\n                            <el-tag size=\"small\" type=\"success\">Active</el-tag>\r\n                        </div>\r\n                    </el-card>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n\r\n        <!-- Dialog for creating new space -->\r\n        <el-dialog title=\"Create New Space\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n            <el-form :model=\"newSpace\" label-width=\"120px\">\r\n                <el-form-item label=\"Space Name\">\r\n                    <el-input v-model=\"newSpace.name\" placeholder=\"Enter space name\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            \r\n            <template #footer>\r\n                <span class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogVisible = false\">Cancel</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitNewSpace\">Create</el-button>\r\n                </span>\r\n            </template>\r\n        </el-dialog>\r\n\r\n        <!-- Dialog for joining existing space -->\r\n        <el-dialog title=\"Join Existing Space\" :visible.sync=\"joinDialogVisible\" width=\"30%\">\r\n            <el-form :model=\"joinSpace\" label-width=\"120px\">\r\n                <el-form-item label=\"Space ID\">\r\n                    <el-input v-model=\"joinSpace.spaceId\" placeholder=\"Enter space ID\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            \r\n            <template #footer>\r\n                <span class=\"dialog-footer\">\r\n                    <el-button @click=\"joinDialogVisible = false\">Cancel</el-button>\r\n                    <el-button type=\"primary\" @click=\"submitJoinSpace\">Join</el-button>\r\n                </span>\r\n            </template>\r\n        </el-dialog>\r\n    </app-layout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '@/components/layout/AppLayout.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    components: {\r\n        AppLayout\r\n    },\r\n    data() {\r\n        return {\r\n            currentSpace: null,\r\n            dialogVisible: false,\r\n            newSpace: {\r\n                name: ''\r\n            },\r\n            joinDialogVisible: false,\r\n            joinSpace: {\r\n                spaceId: ''\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        createSpace() {\r\n            this.dialogVisible = true;\r\n        },\r\n        submitNewSpace() {\r\n            const userId = localStorage.getItem('userId');\r\n            const username = localStorage.getItem('username');\r\n            const email = localStorage.getItem('email');\r\n            \r\n            const spaceRequest = {\r\n                name: this.newSpace.name,\r\n                users: [{\r\n                    id: parseInt(userId),\r\n                    username: username,\r\n                    email: email,\r\n                    assignedChores: []\r\n                }]\r\n            };\r\n\r\n            axios.post('http://localhost:8080/space', spaceRequest)\r\n                .then((response) => {\r\n                    this.$message.success('Space created successfully!');\r\n                    this.dialogVisible = false;\r\n                    this.newSpace.name = '';\r\n                    localStorage.setItem('spaceId', response.data.id);\r\n                    this.fetchCurrentSpace();\r\n                })\r\n                .catch(error => {\r\n                    this.$message.error('Failed to create space: ' + error.response.data.message);\r\n                    console.error('Error:', error);\r\n                });\r\n        },\r\n        fetchCurrentSpace() {\r\n            const spaceId = localStorage.getItem('spaceId');\r\n            if (!spaceId) {\r\n                return;\r\n            }\r\n            \r\n            axios.get(`http://localhost:8080/space/${spaceId}`)\r\n                .then(response => {\r\n                    this.currentSpace = response.data;\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching space:', error);\r\n                    this.$message.error('Failed to fetch space details');\r\n                    localStorage.removeItem('spaceId');\r\n                });\r\n        },\r\n        showJoinSpace() {\r\n            this.joinDialogVisible = true;\r\n        },\r\n        \r\n        submitJoinSpace() {\r\n            const userId = localStorage.getItem('userId');\r\n            const spaceId = parseInt(this.joinSpace.spaceId);\r\n            \r\n            if (isNaN(spaceId)) {\r\n                this.$message.error('Please enter a valid Space ID');\r\n                return;\r\n            }\r\n            \r\n            axios.post(`http://localhost:8080/space/${spaceId}/users/${userId}`)\r\n                .then(() => {\r\n                    this.$message.success('Successfully joined space!');\r\n                    this.joinDialogVisible = false;\r\n                    this.joinSpace.spaceId = '';\r\n                    localStorage.setItem('spaceId', spaceId);\r\n                    this.fetchCurrentSpace();\r\n                })\r\n                .catch(error => {\r\n                    const errorMessage = error.response?.data || 'Failed to join space';\r\n                    this.$message.error(errorMessage);\r\n                    console.error('Error:', error);\r\n                });\r\n        },\r\n        quitSpace() {\r\n            const userId = localStorage.getItem('userId');\r\n            const spaceId = this.currentSpace.id;\r\n            \r\n            console.log('Attempting to quit space with:', {\r\n                userId,\r\n                spaceId,\r\n                currentSpace: this.currentSpace,\r\n                localStorage: {\r\n                    userId: localStorage.getItem('userId'),\r\n                    spaceId: localStorage.getItem('spaceId')\r\n                }\r\n            });\r\n\r\n            this.$confirm('Are you sure you want to quit this space?', 'Warning', {\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                axios.delete(`http://localhost:8080/space/${spaceId}/users/${userId}`)\r\n                    .then(() => {\r\n                        this.$message.success('Successfully quit the space');\r\n                        localStorage.removeItem('spaceId');\r\n                        this.currentSpace = null;\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error quitting space:', {\r\n                            error,\r\n                            response: error.response?.data,\r\n                            status: error.response?.status\r\n                        });\r\n                        const errorMessage = error.response?.data?.message \r\n                            || error.response?.data?.error \r\n                            || 'Failed to quit space';\r\n                        this.$message.error(errorMessage);\r\n                    });\r\n            });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchCurrentSpace();\r\n    },\r\n    created() {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n            this.$message.error('User ID not found. Please login again.');\r\n            this.$router.push('/login');\r\n            return;\r\n        }\r\n        \r\n        axios.get(`http://localhost:8080/user/${userId}`)\r\n            .then(response => {\r\n                if (response.data.status === 'success') {\r\n                    const user = response.data.data;\r\n                    if (user.spaceId) {\r\n                        localStorage.setItem('spaceId', user.spaceId);\r\n                        this.fetchCurrentSpace();\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching user:', error);\r\n                this.$message.error('Failed to fetch user information');\r\n            });\r\n    }\r\n}\r\n</script> \r\n<style scoped>\r\n.space-dashboard {\r\n    padding: 20px;\r\n}\r\n\r\n.space-header {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.space-title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.space-title h2 {\r\n    margin: 0;\r\n}\r\n\r\n.card-grid {\r\n    margin-top: 20px;\r\n}\r\n\r\n.box-card {\r\n    margin-bottom: 20px;\r\n    height: 100%;\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.space-item, .user-item, .chore-item {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ebeef5;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.space-item:last-child, \r\n.user-item:last-child, \r\n.chore-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.el-tag {\r\n    margin-left: 8px;\r\n}\r\n\r\n/* Add hover effect to items */\r\n.space-item:hover, \r\n.user-item:hover, \r\n.chore-item:hover {\r\n    background-color: #f5f7fa;\r\n}\r\n\r\n/* Make sure the cards have proper spacing */\r\n.el-col {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n/* Add some padding to the card content */\r\n.el-card__body {\r\n    padding: 15px;\r\n}\r\n\r\n.empty-state {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 400px;\r\n}\r\n\r\n.empty-state .el-button {\r\n    margin: 0 8px;\r\n}\r\n\r\n.dialog-footer {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n}\r\n\r\n.card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.functional-space-item, .user-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid #eee;\r\n}\r\n\r\n.functional-space-item:last-child, \r\n.user-item:last-child {\r\n    border-bottom: none;\r\n}\r\n\r\n.box-card {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.user-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.user-points {\r\n    font-size: 12px;\r\n    color: #909399;\r\n    margin-top: 4px;\r\n}\r\n\r\n.space-id {\r\n    font-size: 14px;\r\n    color: #909399;\r\n    font-weight: normal;\r\n    margin-left: 8px;\r\n}\r\n</style> \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}